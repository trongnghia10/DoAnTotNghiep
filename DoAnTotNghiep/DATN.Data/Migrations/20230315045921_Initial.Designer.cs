// <auto-generated />
using System;
using DATN.Data.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DATN.Data.Migrations
{
    [DbContext(typeof(QLBanGiayDbContext))]
    [Migration("20230315045921_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DATN.Data.Models.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AccountRole")
                        .HasColumnType("int");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Accounts");

                    b.HasIndex(new[] { "UserId" }, "IX_UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DATN.Data.Models.Asset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProducerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Assets");

                    b.HasIndex(new[] { "ProducerId" }, "IX_ProducerId");

                    b.HasIndex(new[] { "ProductId" }, "IX_ProductId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("DATN.Data.Models.Bill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BillStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<long>("TotalPrice")
                        .HasColumnType("bigint");

                    b.Property<long>("Vat")
                        .HasColumnType("bigint")
                        .HasColumnName("VAT");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Bills");

                    b.HasIndex(new[] { "AccountId" }, "IX_AccountId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("DATN.Data.Models.BillImport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BillImportType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<long>("TotalPrice")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK_dbo.BillImports");

                    b.HasIndex(new[] { "UserId" }, "IX_UserId");

                    b.ToTable("BillImports");
                });

            modelBuilder.Entity("DATN.Data.Models.BillImportInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BillImportId")
                        .HasColumnType("bigint");

                    b.Property<int>("NumberImport")
                        .HasColumnType("int");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK_dbo.BillImportInfoes");

                    b.HasIndex(new[] { "BillImportId" }, "IX_BillImportId");

                    b.HasIndex(new[] { "ProductId" }, "IX_ProductId");

                    b.ToTable("BillImportInfoes");
                });

            modelBuilder.Entity("DATN.Data.Models.BillInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BillId")
                        .HasColumnType("bigint");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("QuantityPurchased")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK_dbo.BillInfoes");

                    b.HasIndex(new[] { "BillId" }, "IX_BillId");

                    b.HasIndex(new[] { "ProductId" }, "IX_ProductId");

                    b.ToTable("BillInfoes");
                });

            modelBuilder.Entity("DATN.Data.Models.Cart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("QuantityPurchased")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Carts");

                    b.HasIndex(new[] { "AccountId" }, "IX_AccountId");

                    b.HasIndex(new[] { "ProductId" }, "IX_ProductId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("DATN.Data.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CategoryStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Categories");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DATN.Data.Models.Producer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Addess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProducerStatus")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Producers");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("DATN.Data.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AmountProduct")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<string>("ProCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProducerId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductStatus")
                        .HasColumnType("int");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Products");

                    b.HasIndex(new[] { "CategoryId" }, "IX_CategoryId");

                    b.HasIndex(new[] { "ProducerId" }, "IX_ProducerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DATN.Data.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserSatus")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Users");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DATN.Data.Models.Account", b =>
                {
                    b.HasOne("DATN.Data.Models.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Accounts_dbo.Users_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DATN.Data.Models.Asset", b =>
                {
                    b.HasOne("DATN.Data.Models.Producer", "Producer")
                        .WithMany("Assets")
                        .HasForeignKey("ProducerId")
                        .HasConstraintName("FK_dbo.Assets_dbo.Producers_ProducerId");

                    b.HasOne("DATN.Data.Models.Product", "Product")
                        .WithMany("Assets")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_dbo.Assets_dbo.Products_ProductId");

                    b.Navigation("Producer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DATN.Data.Models.Bill", b =>
                {
                    b.HasOne("DATN.Data.Models.Account", "Account")
                        .WithMany("Bills")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Bills_dbo.Accounts_AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DATN.Data.Models.BillImport", b =>
                {
                    b.HasOne("DATN.Data.Models.User", "User")
                        .WithMany("BillImports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.BillImports_dbo.Users_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DATN.Data.Models.BillImportInfo", b =>
                {
                    b.HasOne("DATN.Data.Models.BillImport", "BillImport")
                        .WithMany("BillImportInfos")
                        .HasForeignKey("BillImportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.BillImportInfoes_dbo.BillImports_BillImportId");

                    b.HasOne("DATN.Data.Models.Product", "Product")
                        .WithMany("BillImportInfos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.BillImportInfoes_dbo.Products_ProductId");

                    b.Navigation("BillImport");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DATN.Data.Models.BillInfo", b =>
                {
                    b.HasOne("DATN.Data.Models.Bill", "Bill")
                        .WithMany("BillInfos")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.BillInfoes_dbo.Bills_BillId");

                    b.HasOne("DATN.Data.Models.Product", "Product")
                        .WithMany("BillInfos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.BillInfoes_dbo.Products_ProductId");

                    b.Navigation("Bill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DATN.Data.Models.Cart", b =>
                {
                    b.HasOne("DATN.Data.Models.Account", "Account")
                        .WithMany("Carts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Carts_dbo.Accounts_AccountId");

                    b.HasOne("DATN.Data.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Carts_dbo.Products_ProductId");

                    b.Navigation("Account");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DATN.Data.Models.Product", b =>
                {
                    b.HasOne("DATN.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Products_dbo.Categories_CategoryProductId");

                    b.HasOne("DATN.Data.Models.Producer", "Producer")
                        .WithMany("Products")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Products_dbo.Producers_ProducerId");

                    b.Navigation("Category");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("DATN.Data.Models.Account", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Carts");
                });

            modelBuilder.Entity("DATN.Data.Models.Bill", b =>
                {
                    b.Navigation("BillInfos");
                });

            modelBuilder.Entity("DATN.Data.Models.BillImport", b =>
                {
                    b.Navigation("BillImportInfos");
                });

            modelBuilder.Entity("DATN.Data.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DATN.Data.Models.Producer", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("DATN.Data.Models.Product", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("BillImportInfos");

                    b.Navigation("BillInfos");

                    b.Navigation("Carts");
                });

            modelBuilder.Entity("DATN.Data.Models.User", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("BillImports");
                });
#pragma warning restore 612, 618
        }
    }
}
